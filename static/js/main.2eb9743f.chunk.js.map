{"version":3,"sources":["components/AppHeader/index.js","components/AppHeader/AppHeader.jsx","components/ItemStatusFilter/index.js","components/ItemStatusFilter/ItemStatusFilter.jsx","components/SearchPanel/index.js","components/SearchPanel/SearchPanel.jsx","components/ToDoListItem/index.js","components/ToDoListItem/ToDoListItem.jsx","components/ToDoList/index.js","components/ToDoList/ToDoList.jsx","components/ItemAddForm/index.js","components/ItemAddForm/ItemAddForm.jsx","components/App/index.js","components/App/App.jsx","index.js"],"names":["AppHeader","toDo","done","className","ItemStatusFilter","buttons","name","label","this","props","filter","onFilterChange","map","clazz","type","onClick","Component","SearchPanel","state","term","onSearch","e","target","value","setState","placeholder","onChange","ToDoListItem","onDeleted","onToggleImportant","onToggleDone","classNames","important","ToDoList","todos","elements","item","id","itemProps","ItemAddForm","onLabelChange","onSubmit","preventDefault","onAdd","App","maxId","toDoData","createToDoItem","deleteItem","idx","findIndex","el","slice","addItem","text","newItem","toggleProperty","arr","propName","oldItem","items","length","toLowerCase","indexOf","visibleItems","search","doneCount","todoCount","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2eb9743f.chunk.js","sourcesContent":["import AppHeader from \"./AppHeader\";\r\n\r\nexport default AppHeader;","import React from \"react\";\r\nimport './AppHeader.scss'\r\n\r\n\r\nconst AppHeader = ({ toDo, done }) => {\r\n  return (\r\n    <div className=\"app-header d-flex\">\r\n      <h1>ToDo List</h1>\r\n      <h2>{toDo} more to do, {done} done</h2>\r\n    </div>\r\n  )\r\n};\r\n\r\n\r\nexport default AppHeader;","import ItemStatusFilter from \"./ItemStatusFilter\";\r\n\r\nexport default ItemStatusFilter;","import React, { Component } from \"react\";\r\nimport './ItemStatusFilter.scss'\r\n\r\n\r\nexport default class ItemStatusFilter extends Component {\r\n\r\n  buttons = [\r\n    { name: 'all', label: 'All' },\r\n    { name: 'active', label: 'Active' },\r\n    { name: 'done', label: 'Done' }\r\n  ]\r\n\r\n\r\n\r\n  render() {\r\n    const {filter, onFilterChange} = this.props\r\n    const buttons = this.buttons.map(({ name, label }) => {\r\n      const isActive = filter === name;\r\n      const clazz = isActive ? 'btn-info' : 'btn-outline-secondary'\r\n      return(\r\n        <button type=\"button\"\r\n          className={`btn ${clazz}`}\r\n          key={name}\r\n          onClick={() => onFilterChange(name)}>\r\n          {label}\r\n        </button>\r\n      )\r\n    })\r\n\r\n    return (\r\n      <div className=\"btn-group\">\r\n        {buttons}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\n","import SearchPanel from \"./SearchPanel\";\r\n\r\nexport default SearchPanel;","import React, { Component } from \"react\";\r\nimport './SearchPanel.scss'\r\n\r\nexport default class SearchPanel extends Component {\r\n  state = {\r\n    term: ''\r\n  };\r\n\r\n  onSearch = (e) => {\r\n    const term = e.target.value\r\n    this.setState({ term });\r\n    this.props.onSearch(term);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form\r\n        className=\"search-input-form\">\r\n        <input\r\n          className=\"search-input form-control\"\r\n          type=\"search\"\r\n          placeholder=\"Type to search\"\r\n          onChange={this.onSearch}  \r\n          value={this.state.term}\r\n        />\r\n      </form>\r\n    )\r\n  }\r\n\r\n\r\n};\r\n\r\n","import ToDoListItem from \"./ToDoListItem\";\r\n\r\nexport default ToDoListItem;","import React, { Component } from \"react\";\r\nimport './ToDoListItem.scss'\r\n\r\n\r\nexport default class ToDoListItem extends Component {\r\n\r\n\r\n  render() {\r\n    const { label, onDeleted, onToggleImportant, onToggleDone, done, important } = this.props;\r\n    let classNames = \"todo-list-item\";\r\n\r\n    if (done) {\r\n      classNames += ' done';\r\n    }\r\n\r\n    if (important) {\r\n      classNames += ' important'\r\n    }\r\n\r\n    return (\r\n      <div className={classNames} >\r\n        <span className=\"todo-list-item-label\"\r\n         onClick={onToggleDone}>\r\n          {label}\r\n        </span>\r\n        <div className=\"buttons-box\">\r\n          <button type=\"button\"\r\n            className=\"btn btn-outline-danger btn-sm float-right\"\r\n            onClick={onDeleted}>\r\n            <i className=\"bi bi-trash\" />\r\n          </button>\r\n          <button type=\"button\"\r\n            className=\"btn btn-outline-success btn-sm float-right\"\r\n            onClick={onToggleImportant}>\r\n            <i className=\"bi bi-exclamation-lg\" />\r\n          </button>\r\n        </div>\r\n\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n","import ToDoList from \"./ToDoList\";\r\n\r\nexport default ToDoList;","import React from \"react\";\r\nimport ToDoListItem from \"../ToDoListItem\";\r\nimport './ToDoList.scss'\r\n\r\nconst ToDoList = ({ todos, onDeleted, onToggleImportant, onToggleDone }) => {\r\n\r\n  const elements = todos.map((item) => {\r\n    const { id, ...itemProps } = item;\r\n    return (\r\n      <li key={item.id} className=\"list-group-item\">\r\n        <ToDoListItem {...itemProps}\r\n          onDeleted={() => onDeleted(id)}\r\n          onToggleImportant={() => onToggleImportant(id)}\r\n          onToggleDone={() => onToggleDone(id)}\r\n        />\r\n      </li>\r\n    )\r\n  })\r\n\r\n  return (\r\n    <ul className=\"list-group todo-list\">\r\n      {elements}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ToDoList;","import ItemAddForm from \"./ItemAddForm\";\r\n\r\nexport default ItemAddForm;","import React, { Component } from \"react\";\r\nimport './ItemAddForm.scss'\r\n\r\nexport default class ItemAddForm extends Component {\r\n  state = {\r\n    label: ''\r\n  };\r\n\r\n\r\n\r\n  onLabelChange = (e) => {\r\n    this.setState({\r\n      label: e.target.value\r\n    })\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    // if (this.state.label === \"\") {\r\n    //   return;\r\n    // }\r\n    this.props.onAdd(this.state.label);\r\n    this.setState({\r\n      label: ''\r\n    })\r\n  };\r\n\r\n  render() {\r\n    const { onAdd } = this.props;\r\n    return (\r\n      <form className=\"item-add-form\"\r\n        onSubmit={this.onSubmit}>\r\n        <input type=\"text\"\r\n          className=\"form-control\"\r\n          onChange={this.onLabelChange}\r\n          placeholder=\"What needs to be done\"\r\n          value={this.state.label}\r\n        />\r\n        <button className=\"btn btn-outline-secondary\"\r\n          onClick={() => onAdd}>\r\n          Add Item\r\n        </button>\r\n      </form>\r\n    )\r\n  }\r\n}","import App from \"./App\";\r\n\r\nexport default App;","import React, { Component } from \"react\";\r\n\r\nimport AppHeader from \"../AppHeader\";\r\nimport ItemStatusFilter from \"../ItemStatusFilter\";\r\nimport SearchPanel from \"../SearchPanel\";\r\nimport ToDoList from \"../ToDoList\";\r\nimport ItemAddForm from '../ItemAddForm'\r\n\r\n\r\nimport './App.scss'\r\n\r\nexport default class App extends Component {\r\n  maxId = 100;\r\n  state = {\r\n    toDoData: [\r\n      this.createToDoItem('Drink Coffee'),\r\n      this.createToDoItem('Make Awsome App'),\r\n      this.createToDoItem('Have a lunch')\r\n    ],\r\n    term: '',\r\n    filter: 'all'\r\n  }\r\n\r\n  createToDoItem(label) {\r\n    return {\r\n      label,\r\n      done: false,\r\n      important: false,\r\n      id: this.maxId++\r\n    }\r\n  }\r\n\r\n  deleteItem = (id) => {\r\n    this.setState(({ toDoData }) => {\r\n      const idx = toDoData.findIndex((el) => el.id === id)\r\n      const newArray = [\r\n        ...toDoData.slice(0, idx),\r\n        ...toDoData.slice(idx + 1)\r\n      ];\r\n\r\n      return {\r\n        toDoData: newArray\r\n      }\r\n    })\r\n  }\r\n\r\n  addItem = (text) => {\r\n    const newItem = this.createToDoItem(text);\r\n\r\n    this.setState(({ toDoData }) => {\r\n      const newArray = [\r\n        ...toDoData,\r\n        newItem\r\n      ];\r\n      return {\r\n        toDoData: newArray\r\n      }\r\n    })\r\n  }\r\n\r\n  toggleProperty(arr, id, propName) {\r\n    const idx = arr.findIndex((el) => el.id === id)\r\n    const oldItem = arr[idx];\r\n    const newItem = { ...oldItem, [propName]: !oldItem[propName] };\r\n\r\n    return [\r\n      ...arr.slice(0, idx),\r\n      newItem,\r\n      ...arr.slice(idx + 1)\r\n    ];\r\n  }\r\n\r\n  onToggleDone = (id) => {\r\n    this.setState(({ toDoData }) => {\r\n      return {\r\n        toDoData: this.toggleProperty(toDoData, id, 'done')\r\n      }\r\n    })\r\n  }\r\n\r\n  onToggleImportant = (id) => {\r\n    this.setState(({ toDoData }) => {\r\n      return {\r\n        toDoData: this.toggleProperty(toDoData, id, 'important')\r\n      }\r\n    })\r\n  }\r\n\r\n  onSearch = (term) => {\r\n    this.setState({ term });\r\n  }\r\n\r\n  onFilterChange = (filter) => {\r\n    this.setState({ filter });\r\n  }\r\n\r\n  search(items, term) {\r\n    if (term.length === 0) {\r\n      return items;\r\n    }\r\n    return items.filter((item) => {\r\n      return item.label\r\n        .toLowerCase()\r\n        .indexOf(term.toLowerCase()) > -1;\r\n    })\r\n  }\r\n\r\n  filter(items, filter) {\r\n    switch (filter) {\r\n      case 'all':\r\n        return items;\r\n      case 'active':\r\n        return items.filter((item) => !item.done);\r\n      case 'done':\r\n        return items.filter((item) => item.done);\r\n      default:\r\n        return items;\r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n    const { toDoData, term, filter } = this.state;\r\n    const visibleItems = this.filter(\r\n      this.search(toDoData, term), filter);\r\n    const doneCount = toDoData.filter((el) => el.done).length;\r\n    const todoCount = toDoData.length - doneCount;\r\n\r\n    return (\r\n      <div className=\"todo-app\" >\r\n        <AppHeader toDo={todoCount} done={doneCount} />\r\n        <div className=\"todo-panel\">\r\n          <SearchPanel onSearch={this.onSearch} />\r\n          <ItemStatusFilter filter={filter}\r\n            onFilterChange={this.onFilterChange} />\r\n        </div>\r\n\r\n        <ToDoList\r\n          todos={visibleItems}\r\n          onDeleted={this.deleteItem}\r\n          onToggleImportant={this.onToggleImportant}\r\n          onToggleDone={this.onToggleDone} />\r\n\r\n        <ItemAddForm onAdd={this.addItem} />\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from './components/App'\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}